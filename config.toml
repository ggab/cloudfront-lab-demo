baseURL = "/"
languageCode = "en-us"
title = "Welcome to AWS CloudFront Lab"
theme = "hello-friend-ng"


PygmentsCodeFences = true
PygmentsStyle = "monokai"

paginate  = 10
rssLimit  = 10  # Maximum number of items in the RSS feed.
copyright = "This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License." # This message is only used by the RSS template.

# googleAnalytics = ""
# disqusShortname = ""

archetypeDir = "archetypes"
contentDir   = "content"
dataDir      = "data"
layoutDir    = "layouts"
publishDir   = "public"

buildDrafts  = false
buildFuture  = false
buildExpired = false
canonifyURLs = true

enableRobotsTXT = true
enableGitInfo   = false
enableEmoji     = true
enableMissingTranslationPlaceholders = false
disableRSS     = false
disableSitemap = false
disable404     = false
disableHugoGeneratorInject = false

[permalinks]
  posts = "/posts/:year/:month/:title/"

[author]
  name = "Jane Doe"

[blackfriday]
  hrefTargetBlank = true

[taxonomies]
  tag      = "tags"
  category = "categories"
  series   = "series"

[params]
  dateform        = "Jan 2, 2006"
  dateformShort   = "Jan 2"
  dateformNum     = "2006-01-02"
  dateformNumTime = "2006-01-02 15:04"

  # Metadata mostly used in document's head
  # 
  description = "Nice theme for homepages and blogs"
  keywords = ""
  images = [""]

  # Home subtitle of the index page.
  #
  homeSubtitle = "AWS Edge Service"

  # Set a background for the homepage
  # backgroundImage = "assets/images/background.jpg"

  # Prefix of link to the git commit detail page. GitInfo must be enabled.
  #
  # gitUrl = ""

  # Set disableReadOtherPosts to true in order to hide the links to other posts.
  #
  disableReadOtherPosts = false

  # Enable theme toggle
  # 
  # This options enables the theme toggle for the theme. 
  # Per default, this option is off. 
  # The theme is respecting the prefers-color-scheme of the operating systeme. 
  # With this option on, the page user is able to set the scheme he wants. 
  enableThemeToggle = false

  # Sharing buttons
  #
  # There are a lot of buttons preconfigured. If you want to change them,
  # generate the buttons here: https://sharingbuttons.io
  # and add them into your own `layouts/partials/sharing-buttons.html`
  #
  enableSharingButtons = true

  # Integrate Javascript files or stylesheets by adding the url to the external assets or by
  # linking local files with their path relative to the static folder, e.g. "css/styles.css"
  #
  customCSS = []
  customJS  = []

  # Toggle this option need to rebuild SCSS, requires extended version of Hugo
  #
  justifyContent = false  # Set "text-align: justify" to .post-content.

  # Custom footer 
  # If you want, you can easily override the default footer with your own content. 
  #
  [params.footer]
    trademark = false
    rss = false
    copyright = false
    author = false

    topText = []
    bottomText = []

  # Colors for favicons
  #
  [params.favicon.color]
    mask = "#1b1c1d"
    msapplication = "#1b1c1d"
    theme = "#1b1c1d"

  [params.logo]
    logoMark     = ">"
    logoText     = "$ cd /home/"
    logoHomeLink = "/"
    # Set true to remove the logo cursor entirely.
    # logoCursorDisabled = false
    # Set to a valid CSS color to change the cursor in the logo.
    # logoCursorColor    = "#67a2c9"
    # Set to a valid CSS time value to change the animation duration, "0s" to disable.
    # logoCursorAnimate  = "2s"

  # Commento is more than just a comments widget you can embed — 
  # it’s a return to the roots of the internet. 
  # An internet without the tracking and invasions of privacy. 
  # An internet that is simple and lightweight. 
  # An internet that is focused on interesting discussions, not ads. 
  # A better internet.
  # Uncomment this to enable Commento.
  #
  # [params.commento]
  #   url = ""

  # Uncomment this if you want a portrait on your start page
  #
  # [params.portrait]
  #   path     = "/img/image.jpg"
  #   alt      = "Portrait"
  #   maxWidth = "50px"


[languages]
  [languages.en]
    subtitle  = "AWS Edge Service"
    weight    = 1
    copyright = ''

[menu]
  [[menu.main]]
    identifier = "sign_in"
    name       = "Sign In"
    url        = "sign_in/"


[deployment]
# By default, files are uploaded in an arbitrary order.
# Files that match the regular expressions in the "Order" list
# will be uploaded first, in the listed order.
order = [".jpg$", ".gif$"]


[[deployment.targets]]
# An arbitrary name for this target.
name = "mydeployment"
# The Go Cloud Development Kit URL to deploy to. Examples:
# GCS; see https://gocloud.dev/howto/blob/#gcs
# URL = "gs://<Bucket Name>"

# S3; see https://gocloud.dev/howto/blob/#s3
# For S3-compatible endpoints, see https://gocloud.dev/howto/blob/#s3-compatible
URL = "s3://gabinlee-cloudfront-lab?region=us-east-1"

# Azure Blob Storage; see https://gocloud.dev/howto/blob/#azure
# URL = "azblob://$web"

# You can use a "prefix=" query parameter to target a subfolder of the bucket:
# URL = "gs://<Bucket Name>?prefix=a/subfolder/"

# If you are using a CloudFront CDN, deploy will invalidate the cache as needed.
# cloudFrontDistributionID = <ID>

# Optionally, you can include or exclude specific files.
# See https://godoc.org/github.com/gobwas/glob#Glob for the glob pattern syntax.
# If non-empty, the pattern is matched against the local path.
# All paths are matched against in their filepath.ToSlash form.
# If exclude is non-empty, and a local or remote file's path matches it, that file is not synced.
# If include is non-empty, and a local or remote file's path does not match it, that file is not synced.
# As a result, local files that don't pass the include/exclude filters are not uploaded to remote,
# and remote files that don't pass the include/exclude filters are not deleted.
# include = "**.html" # would only include files with ".html" suffix
# exclude = "**.{jpg, png}" # would exclude files with ".jpg" or ".png" suffix


# [[deployment.matchers]] configure behavior for files that match the Pattern.
# See https://golang.org/pkg/regexp/syntax/ for pattern syntax.
# Pattern searching is stopped on first match.

# Samples:

[[deployment.matchers]]
# Cache static assets for 1 year.
pattern = "^.+\\.(js|css|svg|ttf)$"
cacheControl = "max-age=31536000, no-transform, public"
gzip = true

[[deployment.matchers]]
pattern = "^.+\\.(png|jpg)$"
cacheControl = "max-age=31536000, no-transform, public"
gzip = false

[[deployment.matchers]]
# Set custom content type for /sitemap.xml
pattern = "^sitemap\\.xml$"
contentType = "application/xml"
gzip = true

[[deployment.matchers]]
pattern = "^.+\\.(html|xml|json)$"
gzip = true
